- Our API was designed so that historical data ("Game" entries) are bundled through Summoner-detail endpoint.
    - This is a problem if we save more than last 10 games to DB.
        - We currently DO append "new" games to Summoner game_sets.
        - Riot API currently returns last 10 games only.
            - This will probably change with Riot's new MatchHistory API.
    - Consider separating Game entries from Summoner data, so if/when we get large # of games stored
      for any single summoner, we can paginate or load them dynamically (e.g. as user scrolls down page).

- Determine when to update data from Riot API:
    - 1) When our API is called, check `last_update` and do so automatically before returning data?
    - 2) As above, but when page is visited, via AJAX call to a view that updates such?
    - 3) Manually, via "Refresh Data" button on page?
    - Probably go with (2) & (3)
        - If doing (3), need to communicate time until able to refresh to the view.

- Investigate following problem: [LOPRI]
    - First seen on our API page load.
    - Related to hyper-aggressive Chrome pre-fetching?

    Traceback (most recent call last):
      File "/usr/lib/python2.7/wsgiref/handlers.py", line 86, in run
        self.finish_response()
      File "/usr/lib/python2.7/wsgiref/handlers.py", line 127, in finish_response
        self.write(data)
      File "/usr/lib/python2.7/wsgiref/handlers.py", line 215, in write
        self._write(data)
      File "/usr/lib/python2.7/socket.py", line 324, in write
        self.flush()
      File "/usr/lib/python2.7/socket.py", line 303, in flush
        self._sock.sendall(view[write_offset:write_offset+buffer_size])
    error: [Errno 32] Broken pipe
    ----------------------------------------
    Exception happened during processing of request from ('10.0.2.2', 61379)
    Traceback (most recent call last):
      File "/usr/lib/python2.7/SocketServer.py", line 582, in process_request_thread
        self.finish_request(request, client_address)
      File "/usr/lib/python2.7/SocketServer.py", line 323, in finish_request
        self.RequestHandlerClass(request, client_address, self)
      File "/usr/local/lib/python2.7/dist-packages/django/core/servers/basehttp.py", line 126, in __init__
        super(WSGIRequestHandler, self).__init__(*args, **kwargs)
      File "/usr/lib/python2.7/SocketServer.py", line 640, in __init__
        self.finish()
      File "/usr/lib/python2.7/SocketServer.py", line 693, in finish
        self.wfile.flush()
      File "/usr/lib/python2.7/socket.py", line 303, in flush
        self._sock.sendall(view[write_offset:write_offset+buffer_size])
    error: [Errno 32] Broken pipe
    ----------------------------------------

- Remove default region args and ensure all calls specify region! [SOLVED]

- Riot stores summoner names in "formatted" and "standardized" forms. [SOLVED]
    - The standardized name is the name in all lowercase with spaces removed.
    - The formatted name is as you would see it in-game.
    - We have to recognize this and make sure it doesn't cause problems.
        - Consider resolving all queries to the formatted name's string (via Riot API call)
          and then only using that string for summoner names.
        - Otherwise we run into problems with (trying to) duplicate summoners.
    - Possible solutions: immediately resolve user inputted name to ID, then use that resolved name.
        - When name doesn't come from user -- instead from Riot API -- then ok to use that name string.
            - This would be the formatted name.

- Look into alternative caching.
    - requests-cache?
    - Redis, etc?

- Profile Riot API request usage.

- Testing!